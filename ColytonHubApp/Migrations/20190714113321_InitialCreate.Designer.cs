// <auto-generated />
using System;
using ColytonHubApp.DataAccessLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ColytonHubApp.Migrations
{
    [DbContext(typeof(ColytonHubDbContext))]
    [Migration("20190714113321_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DOB")
                        .IsRequired();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsChildPhotoConsent");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("PathOfPhoto");

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Language_Person", b =>
                {
                    b.Property<int>("LanguageId");

                    b.Property<int>("PersonId");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.HasKey("LanguageId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("Language_People");
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaOfInterest");

                    b.Property<string>("Comments");

                    b.Property<int>("CountryId");

                    b.Property<DateTime?>("DOB")
                        .IsRequired();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<DateTime?>("DateOfArrival")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("EmergencyName")
                        .IsRequired();

                    b.Property<int>("EmergencyPhone");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("InterpretorLanguage");

                    b.Property<bool>("IsChildAtSchool");

                    b.Property<bool>("IsInterpretorRequired");

                    b.Property<bool>("IsMyPhotoConsent");

                    b.Property<bool>("IsPartOfTalentPool");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("NoOfChildrenAtSchool");

                    b.Property<string>("OtherProg");

                    b.Property<string>("PathToMyPhoto");

                    b.Property<string>("PathToResume");

                    b.Property<int>("Phone");

                    b.Property<int>("PostCode");

                    b.Property<string>("Relationship")
                        .IsRequired();

                    b.Property<bool>("Signature");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("Street")
                        .IsRequired();

                    b.Property<string>("Suburb")
                        .IsRequired();

                    b.Property<int>("TalentCapacityID");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("TalentCapacityID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.TalentCapacity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capacity")
                        .IsRequired();

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.HasKey("Id");

                    b.ToTable("TalentCapacities");
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Child", b =>
                {
                    b.HasOne("ColytonHubApp.DataAccessLayer.Models.Person", "Person")
                        .WithMany("Children")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Language_Person", b =>
                {
                    b.HasOne("ColytonHubApp.DataAccessLayer.Models.Language", "Language")
                        .WithMany("Language_People")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ColytonHubApp.DataAccessLayer.Models.Person", "Person")
                        .WithMany("Language_People")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ColytonHubApp.DataAccessLayer.Models.Person", b =>
                {
                    b.HasOne("ColytonHubApp.DataAccessLayer.Models.Country", "Country")
                        .WithMany("Person")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ColytonHubApp.DataAccessLayer.Models.TalentCapacity", "TalentCapacity")
                        .WithMany("Person")
                        .HasForeignKey("TalentCapacityID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
